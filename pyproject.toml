[project]
name = "rag-server"
version = "0.1.0"
description = "Code-Knowledge RAG Server - MVP (Python)"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "you@example.com" }
]
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sentence-transformers>=3.0.0",
    "faiss-cpu>=1.7.4",
    "whoosh>=2.7.4",
    "structlog>=24.0.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "httpx>=0.27.0",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "markdown-it-py>=3.0.0",
    "tree-sitter>=0.21.0",
    "tree-sitter-python>=0.21.0",
    "tree-sitter-javascript>=0.21.0",
    "tree-sitter-php>=0.22.0",
    "numpy>=1.24.0",
    "rank-bm25>=0.2.2",
    "langchain>=0.3.0",
    "langchain-openai>=0.2.0",
    "langchain-community>=0.3.0",
    "langsmith>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
rag_server = ["py.typed"]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "A", "C4", "SIM"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = ["src"]

